
Fri Feb 01 00:33:04 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code

Fri Feb 01 13:53:27 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code

Sat Feb 02 10:04:38 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code

Sat Feb 02 13:13:25 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code

Sat Feb 02 19:35:14 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code

Sun Feb 03 01:37:30 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code

Sun Feb 03 12:12:35 IST 2019
================================================================================
Start of user code for valueExpression specific getters and setters implementation
	@Override
	public NamespacedProperty getValueExpression() {
		return valueExpression;
	}

	@Override
	public void setValueExpression(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			valueExpression = namespacedProperty;
			valueExpressionText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code for headerName addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.headerName) {
					return createHeaderName(widgetFactory, parent);
				}
				// End of user code
Start of user code for valueExpression addToPart creation
				if ( key == EsbViewsRepository.HeaderMediator.Properties.valueExpression) {
					return createValueExpression(widgetFactory, parent);
				}
				// End of user code
Start of user code for headerName specific getters and setters implementation
	@Override
	public NamespacedProperty getHeaderName() {
		return headerName;
	}

	@Override
	public void setHeaderName(NamespacedProperty namespacedProperty) {
		if (namespacedProperty != null) {
			headerName = namespacedProperty;
			headerNameText.setText(namespacedProperty.getPropertyValue());
		}
	}
	// End of user code
Start of user code  for headerName widgets declarations
	protected Composite propertiesGroup;
	
	protected NamespacedProperty headerName;
	protected Text headerNameText;
	protected Control[] headerNameElements;
	// End of user code
Start of user code  for valueExpression widgets declarations
	protected NamespacedProperty valueExpression;
	protected Text valueExpressionText;
	protected Control[] valueExpressionElements;
	protected Control[] headerActionElements;
	protected Control[] scopeElements;
	protected Control[] valueTypeElements;
	protected Control[] valueInlineElements;
	protected Control[] valueLiteralElements;
	protected Control[] descriptionElements;
	// End of user code
