AggregateMediatorEditPart_ToolTipMessage=Aggregate mediator implements the message aggregator EIP by aggregating the messages or responses for split messages generated using either the clone or iterate mediator.  
BAMMediatorEditPart_NodeName=BAM
BAMMediatorEditPart_ToolTipMessage=BAM mediator is deprecated. You can use the Publish Event Mediator to obtain similar functionality.
BeanMediatorEditPart_NodeName=Bean
BeanMediatorEditPart_ToolTipMessage=Bean mediator manipulate a JavaBean that is bound to the Synapse message context as a property.
BuilderMediatorEditPart_NodeName=Builder
BuilderMediatorEditPart_ToolTipMessage=Builder mediator builds the actual message, which is coming into the ESB profile through the Binary Relay. (Binary relay is a mechanism to pass the message through ESB runtime without converting to XML unless builder mediator used).
CacheMediatorEditPart_NodeName=Cache
CacheMediatorEditPart_ToolTipMessage=Cache mediator used for simple response message caching. When a message reaches the cache mediator, it checks whether an equivalent message is already cached using a hash value. When the cache mediator detects that the message is a cached message, it fetches the cached response and prepares ESB for sending the response.
CallMediatorEditPart_NodeName=Call
CallMediatorEditPart_ToolTipMessage=Call mediator used to send messages out of the ESB to an endpoint. The response goes to the next mediator placed right after the call mediator in the mediation flow. You can invoke services either in blocking or non-blocking manner. Call mediator recommended for service chaining scenarios.
CalloutMediatorEditPart_NodeName=Callout
CalloutMediatorEditPart_ToolTipMessage=Callout mediator performs a blocking external service invocation during mediation. The target service can be configured either using a child endpoint element or using the 'serviceURL' attribute.
CallTemplateMediatorEditPart_NodeName=CallTemplate
CallTemplateMediatorEditPart_ToolTipMessage=Call-Template mediator Invoke a template by populating the parameters with static values or XPath expressions.
ClassMediatorEditPart_NodeName=Class
ClassMediatorEditPart_ToolTipMessage=Class mediator makes it possible to use a custom class as a mediator.
CloneMediatorEditPart_NodeName=Clone
CloneMediatorEditPart_ToolTipMessage=Clone mediator can be used to create several clones or copies of a message. This mediator implements the message splitter EIP by splitting the message into a number of identical messages which will be processed in parallel. They can also be set to process sequentially by setting the value of the optional 'sequential' attribute to 'true'.
CommandMediatorEditPart_NodeName=Command
CommandMediatorEditPart_ToolTipMessage=Command mediator implements the popular command design pattern and can be used to invoke an object which encapsulates a method call.
ConditionalRouterMediatorEditPart_NodeName=ConditionalRouter
ConditionalRouterMediatorEditPart_ToolTipMessage=Conditional Router mediator specifies how a message should be routed based on given conditions. The specified target sequence is applied if the condition of the mediator evaluates to true.
DataMapperMediatorEditPart_NodeName=DataMapper
DataMapperMediatorEditPart_ToolTipMessage=Datamapper mediator converts and transforms one data format to another, or changes the structure of the data in a message. This mediator can be used to create a graphical mapping configuration and generates the files required to execute this graphical mapping configuration.
DBLookupMediatorEditPart_NodeName=DBLookup
DBLookupMediatorEditPart_ToolTipMessage=DBLookup mediator capable of executing an arbitrary SQL SELECT statement, and then set some resulting values as local message properties on the message context.
DBReportMediatorEditPart_NodeName=DBReport
DBReportMediatorEditPart_ToolTipMessage=DBReport mediator capable of executing an SQL INSERT/UPDATE/DELETE statements, and then set some resulting values as local message properties on the message context.
DropMediatorEditPart_NodeName=Drop
DropMediatorEditPart_ToolTipMessage=Drop mediator drops the current message being process and terminates a message flow.
EJBMediatorEditPart_NodeName=EJB
EJBMediatorEditPart_ToolTipMessage=EJB mediator calls an external Enterprise JavaBean(EJB) and stores the result in the message payload or in a message context property. This mediator supports EJB3 Stateless Session Beans and Stateful Session Beans.
EnqueueMediatorEditPart_NodeName=Enqueue
EnqueueMediatorEditPart_ToolTipMessage=Enqueue mediator can be used in high-load scenarios when you want to execute different sequences for messages with different priorities.
EnrichMediatorEditPart_NodeName=Enrich
EnrichMediatorEditPart_ToolTipMessage=Enrich Mediator can process a message based on a given source configuration and then perform the specified action on the message by using the target configuration.
EntitlementMediatorEditPart_NodeName=Entitlement
EntitlementMediatorEditPart_ToolTipMessage=Entitlement mediator intercepts requests and evaluates the actions performed by a user against an eXtensible Access Control Markup Language (XACML) policy. WSO2 Identity Server can be used as the XACML Policy Decision Point (PDP) where the policy set and WSO2 ESB serves as the XACML Policy Enforcement Point (PEP) where the policy enforced.
EventMediatorEditPart_NodeName=Event
EventMediatorEditPart_ToolTipMessage=Event mediator sends event notifications to an event source, publishes messages to predefined topics.
FastXSLTMediatorEditPart_NodeName=Fast XSLT
FastXSLTMediatorEditPart_ToolTipMessage=FastXSLT mediator is similar to the XSLT mediator, but it uses the streaming XPath parser and applies the XSLT transformation to the message stream instead of to the XML message payload. The result is a faster transformation, but you cannot specify the source, properties, features, or resources as you can with the XSLT mediator.
FaultMediatorEditPart_NodeName=Fault
FaultMediatorEditPart_ToolTipMessage=MakeFault mediator transforms the current message into a fault message.
FilterMediatorEditPart_NodeName=Filter
FilterMediatorEditPart_ToolTipMessage=Filter mediator adds 'if-else' like semantics to the Synapse configuration language. It filtering messages based on an XPath, JSONPath or a regular expression. If the test succeeds, the filter mediator executes the other mediators enclosed in the sequence.
ForEachMediatorEditPart_NodeName=ForEach
ForEachMediatorEditPart_ToolTipMessage=ForEach mediator requires an XPath expression and a sequence (inline or referred). It splits the message into a number of different messages derived from the original message by finding matching elements for the XPath expression specified. Based on the matching elements, new messages are created for each iteration and processed sequentially.
HeaderMediatorEditPart_NodeName=Header
HeaderMediatorEditPart_ToolTipMessage=Header mediator sets or removes a specified header from the message. The scope can be either 'soap' or 'transport'.
IterateMediatorEditPart_NodeName=Iterate
IterateMediatorEditPart_ToolTipMessage=Iterate mediator splits the message into a number of different messages derived from the parent message by finding matching elements for the XPath expression specified. New messages will be created for each matching element and processed in parallel (default behavior) using either the specified sequence or endpoint.
LogMediatorEditPart_NodeName=Log
LogMediatorEditPart_ToolTipMessage=Log mediator can be used in any sequence or proxy service to log the messages being mediate. By default, the log mediator only logs a minimalistic set of details to avoid the message content parsing. But if needed it can be configured to log the full message payload, headers, and even custom user-defined properties.
LoopBackMediatorEditPart_NodeName=LoopBack
LoopBackMediatorEditPart_ToolTipMessage=Loopback mediator moves the message from the Inflow (In Sequence) to the Outflow (Out Sequence). All the configuration in the Inflow that appears after the Loopback mediator skipped.
OAuthMediatorEditPart_NodeName=OAuth
OAuthMediatorEditPart_ToolTipMessage=OAuth Mediator supports 2 forms of OAuth. When a client tries to invoke a RESTful service, it may be required to verify the credentials of the client. This can be achieved by registering an OAuth application in the WSO2 Identity Server. When the client sends a REST call with the Authorization header to the ESB, the OAuth mediator validates it with the Identity server and proceeds.
PayloadFactoryMediatorEditPart_NodeName=PayloadFactory
PayloadFactoryMediatorEditPart_ToolTipMessage=Payload-factory mediator creates a new SOAP or JSON payload for the message, replacing the existing one.
PropertyMediatorEditPart_NodeName=Property
PropertyMediatorEditPart_ToolTipMessage=Property mediator used to manipulate the properties of a message. This mediator can be used to set and remove property values. When it comes to setting property values, the input could be a constant or a variable value generated by an XPath or JSONPath expression.
PublishEventMediatorEditPart_NodeName=PublishEvent
PublishEventMediatorEditPart_ToolTipMessage=Publish event mediator constructs events and publishes them to different systems such as WSO2 BAM/DAS/CEP/SP via event sinks.
RespondMediatorEditPart_NodeName=Respond
RespondMediatorEditPart_ToolTipMessage=Respond mediator stops the processing on the current message flow and sends the message back to the client as a response.
RMSequenceMediatorEditPart_NodeName=RMSequence
RMSequenceMediatorEditPart_ToolTipMessage=Reliable messaging
RouterMediatorEditPart_NodeName=Router
RouterMediatorEditPart_ToolTip=Router mediator is deprecated. You can use the Filter Mediator or Conditional Router Mediator instead.
RuleMediatorEditPart_NodeName=Rule
RuleMediatorEditPart_ToolTipMessage=The Rule mediator uses an XML message as an input and produces a processed XML message after applying a set of rules. The result XML message can be used as the new soap body message. Alternatively, the information in the processed XML message can be used route the message or do any further processing.
ScriptMediatorEditPart_NodeName=Script
ScriptMediatorEditPart_ToolTipMessage=Script mediator supports a variety of scripting languages such as JavaScript, Python, and Ruby. There are two ways of defining a script mediator, either with the script program statements stored in a separate file which referenced via the local or remote registry entry or with the script program statements embedded in-line within the Synapse configuration.
SendMediatorEditPart_NodeName=Send
SendMediatorEditPart_ToolTipMessage=Send mediator used to send requests to endpoints. The same can be used to send response messages back to clients. The service invocations done by the send mediator may or may not be synchronous based on the underlying transport used.
SequenceEditPart_NodeName=Sequence
SequenceEditPart_NodeName=Sequence
SequenceEditPart_NodeName=Sequence
SequenceEditPart_ToolTip=Sequence
SequenceEditPart_ToolTipMessage=Sequence
SequenceEditPart_ToolTipMessage=Sequence
SmooksMediatorEditPart_NodeName=Smooks
SmooksMediatorEditPart_ToolTipMessage=Smooks mediator can be used to apply lightweight transformations on messages in an efficient manner. Smooks is a powerful framework for processing, manipulating and transforming XML and non XML data such as CSV.
SpringMediatorEditPart_NodeName=Spring
SpringMediatorEditPart_ToolTipMessage=Spring mediator exposes a spring bean as a mediator.
StoreMediatorEditPart_NodeName=Store
StoreMediatorEditPart_ToolTipMessage=Store mediator stores messages in a predefined message store and 'messageStore' attribute used to specify the message store to store the message. The optional 'sequence' attribute specifies a sequence through which the message sent before storing it.
SwitchMediatorEditPart_NodeName=Switch
SwitchMediatorEditPart_ToolTipMessage=Switch mediator provides switch-case semantics in the Synapse configuration language. The source XPath or JSONPath executed on the messages. The resulting value then tested against the regular expressions defined in each 'case' element.
ThrottleMediatorEditPart_NodeName=Throttle
ThrottleMediatorEditPart_ToolTipMessage=Throttle mediator can be used for rate limiting as well as concurrency based limiting. A WS-Policy dictates the throttling configuration and can be specified inline or loaded from the registry.
TransactionMediatorEditPart_NodeName=Transaction
TransactionMediatorEditPart_ToolTipMessage=Transaction mediator can provide transaction facility for a set of mediators defined as its child mediators.
URLRewriteMediatorEditPart_NodeName=URLRewrite
URLRewriteMediatorEditPart_ToolTipMessage=URL Rewrite mediator can be used to modify and transform the URL values available in the message. By default, this mediator takes the 'To' header of the message and applies the provided rewrite rules on it.
ValidateMediatorEditPart_NodeName=Validate
ValidateMediatorEditPart_ToolTipMessage=\Validate mediator validates the XML node selected by the source XPath expression, against the specified XML schema. If the source attribute is not specified, the validation performed against the first child of the SOAP body of the current message. If the validation fails, the on-fail sequence of mediators executed.
XQueryMediatorEditPart_NodeName=XQuery
XQueryMediatorEditPart_ToolTipMessage=The XQuery mediator can be used to perform an XQuery transformation.
XSLTMediatorEditPart_NodeName=XSLT
XSLTMediatorEditPart_ToolTipMessage=XSLT mediator applies the specified XSLT transformation to the selected element of the current message payload.